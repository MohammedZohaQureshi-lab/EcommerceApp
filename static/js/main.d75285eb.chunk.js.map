{"version":3,"sources":["components/productItem/productItem.component.jsx","components/addproduct/addproduct.component.jsx","components/productList/productList.component.jsx","components/productmodal/productmodal.component.jsx","App.js","serviceWorker.js","index.js"],"names":["ProductItem","productItem","ondelete","className","id","src","imgUrl","alt","title","price","description","onClick","AddProduct","totalitems","modaltoggle","style","width","ProductList","props","productsList","length","toggleModel","map","product","key","handledelete","children","ProductModal","modalshow","gridstyle","display","gridTemplateColumns","background","role","type","data-dismiss","aria-label","aria-hidden","placeholder","min","console","log","App","deleteItem","delid","newproducts","state","filter","setState","showtheModal","bool","showModal","products","storeProducts","document","querySelector","classList","add","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d75285eb.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst ProductItem = ({ productItem, ondelete }) => {\r\n  return (\r\n    <div className=\"card\" id={productItem.id}>\r\n      <img\r\n        className=\"card-img-top\"\r\n        src={productItem.imgUrl}\r\n        alt=\"Card cap\"\r\n      />\r\n      <div className=\"card-body\">\r\n        <h3 className=\"card-title m-0 mb-3\">{productItem.title}</h3>\r\n        <p className=\"m-0\">\r\n          <b>${productItem.price}</b>\r\n        </p>\r\n        <p className=\"card-text\">{productItem.description}</p>\r\n        <button className=\"btn btn-info d-block mb-2 w-100 text-white\">\r\n          View Details\r\n        </button>\r\n        <button\r\n          className=\"btn btn-info d-block mb-2 w-100 text-white\"\r\n          onClick={() => ondelete(productItem.id)}\r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductItem;\r\n","import React from \"react\";\r\n\r\nconst AddProduct = ({ totalitems, modaltoggle }) => {\r\n  debugger;\r\n  return (\r\n    <div className=\"addProduct\">\r\n      <p className=\"text-secondary p-0 pb-3\">\r\n        Products Available :<b className=\"text-info\"> {totalitems}</b>\r\n      </p>\r\n      <button\r\n        className=\"btn btn-outline-info d-block mb-2\"\r\n        style={{ width: \"200px\" }}\r\n        onClick={() => modaltoggle(true)}\r\n      >\r\n        Add Product\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddProduct;\r\n","import React from \"react\";\r\nimport ProductItem from \"../productItem/productItem.component\";\r\nimport AddProduct from \"../addproduct/addproduct.component\";\r\nconst ProductList = props => {\r\n  return (\r\n    <div className=\"card-container\">\r\n      <AddProduct\r\n        totalitems={props.productsList.length}\r\n        modaltoggle={props.toggleModel}\r\n      >\r\n        Add productsList\r\n      </AddProduct>\r\n      <div className=\"card-content\">\r\n        {props.productsList.map(product => (\r\n          <ProductItem\r\n            key={product.id}\r\n            productItem={product}\r\n            ondelete={props.handledelete}\r\n          />\r\n        ))}\r\n      </div>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductList;\r\n","import React from \"react\";\r\nconst ProductModal = ({ modalshow }) => {\r\n  const gridstyle = {\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"100px 1fr\"\r\n  };\r\n  return (\r\n    <div\r\n      className=\"modal d-block\"\r\n      style={{ background: \"rgba(0, 0, 0, 0.611764705882353)\" }}\r\n    >\r\n      <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\" id=\"exampleModalCenterTitle\">\r\n              Modal title\r\n            </h5>\r\n            <button\r\n              type=\"button\"\r\n              className=\"close\"\r\n              data-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n            >\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <div className=\"mb-3\" style={gridstyle}>\r\n              <label>Name</label>\r\n              <input type=\"text\" placeholder=\"Product Name\" />\r\n            </div>\r\n            <div className=\"mb-3\" style={gridstyle}>\r\n              <label>Description</label>\r\n              <input type=\"text\" placeholder=\"Product Description\" />\r\n            </div>\r\n            <div className=\"mb-3\" style={gridstyle}>\r\n              <label>Price</label>\r\n              <input type=\"number\" min=\"0\" placeholder=\"Product Price\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-footer justify-content-center\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-info\"\r\n              onClick={console.log(\"ADDED\")}\r\n            >\r\n              Add\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductModal;\r\n","import React, { Component } from 'react';\nimport ProductList from './components/productList/productList.component';\nimport ProductModal from \"./components/productmodal/productmodal.component\";\nimport './App.css';\nimport products from './Products.json'\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      productsList: products.storeProducts,\n      showModal: false\n    }\n  }\n  deleteItem = (delid) => {\n    const [...tempproducts] = this.state.productsList;\n    const newproducts = tempproducts.filter(product => product.id !== delid)\n    this.setState({ productsList: [...newproducts] })\n  }\n  componentDidMount() {\n    document.querySelector(\".card-content .card:first-child\").classList.add(\"active\")\n    console.log(\"Active class added\")\n  }\n  showtheModal = (bool) => {\n    this.setState({ showModal: bool })\n  }\n\n  render() {\n    const { productsList, showModal } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"container-fluid pt-3\">\n          <h1 className=\"text-center py-3 m-0\">Products</h1>\n          <ProductList productsList={productsList} handledelete={this.deleteItem} toggleModel={this.showtheModal} >\n            {showModal ? <ProductModal modalshow={showModal}/> : null}\n          </ProductList>\n        </div>\n\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}